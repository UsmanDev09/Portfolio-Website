/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 model.gltf
*/

import React, { useRef, useEffect, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { Html } from '@react-three/drei'
import { useSpring } from "@react-spring/core";
import { a } from "@react-spring/three";

import TypeWriter from './TypeWriter'

export function Model(props) {
  const { nodes, materials } = useGLTF('/model.gltf')

  const [isSmallScreen, setIsSmallScreen] = useState()

  const { position, rotation } = useSpring({
    delay: 1000,
    to: {
      position: [0.01, -0.47, -10.41],
      rotation: [1.31, 0, 0]
    },
    from: {
      position: [0.01, -0.47, -10.41],
      rotation: [3.14, 0, 0 ]
    },
    config: { mass: 40, tension: 500, friction: 150 }
  })


  useEffect(() => {
    const mediaQuery = window.matchMedia('(max-width: 1535px')

    setIsSmallScreen(mediaQuery.matches)
    const handleMediaQueryChange = (event) => {
      setIsSmallScreen(event.matches)
    }

    mediaQuery.addEventListener('change', handleMediaQueryChange)

    return () => {
      mediaQuery.removeEventListener('change', handleMediaQueryChange)
    }
  }, [])


  return (
    <group {...props} dispose={null}>
      <group position={[0, 0.52, 0]} scale={0.1}>
        <mesh geometry={nodes.Circle001.geometry} material={materials['Frame.001']} />
        <mesh geometry={nodes.Circle001_1.geometry} material={materials['Frame.001']} />
        <mesh geometry={nodes.Circle001_2.geometry} material={materials.HeadPhoneHole} />
        <mesh geometry={nodes.Circle001_3.geometry} material={materials.USB_C_INSIDE} />
        <mesh geometry={nodes.Circle001_4.geometry} material={materials['Frame.001']} />
        <mesh geometry={nodes.Circle001_5.geometry} material={materials.TouchbarBorder} />
        <mesh geometry={nodes.Circle001_6.geometry} material={materials.Keyboard} />
        <group position={[0, -0.51, 0]} scale={5.8}>
          <mesh geometry={nodes.Circle006.geometry} material={materials['Frame.001']} />
          <mesh geometry={nodes.Circle006_1.geometry} material={materials.USB_C_INSIDE} />
        </group>
        <mesh geometry={nodes.FrontCameraRing001.geometry} material={materials['CameraRIngBlack.002']} position={[-0.15, 19.57, -16.15]} scale={5.8} />
        <group position={[-11.79, -0.15, -8.3]} scale={5.8}>
          <mesh geometry={nodes.Circle.geometry} material={materials['Keyboard.001']} />
          <mesh geometry={nodes.Circle_1.geometry} material={materials.Key} />
          <mesh geometry={nodes.Circle_2.geometry} material={materials.Touchbar} />
        </group>
        <mesh geometry={nodes.KeyboardKeyHole.geometry} material={materials['Keyboard.001']} position={[-11.79, -0.15, -8.3]} scale={5.8} />
        <mesh geometry={nodes.RubberFoot.geometry} material={materials.DarkRubber} position={[-11.95, -0.75, 7.86]} scale={5.8} />
        <group position={[0.01, -0.21, -10.56]} scale={5.8}>
          <mesh geometry={nodes.Circle012.geometry} material={materials.HingeBlack} />
          <mesh geometry={nodes.Circle012_1.geometry} material={materials.HingeMetal} />
        </group>
        <group position={[-15.03, 0.03, 0.6]} scale={5.8}>
          <mesh geometry={nodes.Circle009.geometry} material={materials['Frame.001']} />
          <mesh geometry={nodes.Circle009_1.geometry} material={materials.SpeakerHole} />
        </group>
        <group position={[12.2, 0.03, 0.6]} scale={5.8}>
          <mesh geometry={nodes.Circle003.geometry} material={materials['Frame.001']} />
          <mesh geometry={nodes.Circle003_1.geometry} material={materials.SpeakerHole} />
        </group>
                {/* <group position={[0.01, -0.47, -10.41]} rotation={[1.31, 0, 0]} scale={5.8}> */}

        <a.group position={position} rotation={rotation} scale={5.8}>
          <mesh geometry={nodes.Circle002.geometry} material={materials['Frame.001']} />
          <mesh geometry={nodes.Circle002_1.geometry} material={materials.Screen} />
          <mesh geometry={nodes.Circle002_2.geometry} material={materials.ScreenGlass} >
           <Html transform distanceFactor={1} className="htmlWrapper" position={[`${isSmallScreen ? '-0.15' : '0.35'}`, -0.2, -1.2]} rotation={[-1.58, 0, 0]}>
            <TypeWriter />
          </Html>

          </mesh>
          <mesh geometry={nodes.Circle002_3.geometry} material={materials.Rubber} />
          <mesh geometry={nodes.Circle002_4.geometry} material={materials.DisplayGlass} />
          <mesh geometry={nodes.AppleLogo000.geometry} material={materials['AppleLogo.004']} position={[0, -0.11, -1.8]} rotation={[-Math.PI, 0, -Math.PI]} scale={0.58} />
        </a.group>
      </group>
    </group>
  )
}

useGLTF.preload('/model.gltf')
